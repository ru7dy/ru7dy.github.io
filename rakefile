# coding: utf-8

deploy_dir = "_deploy"
deploy_branch = ""
config_files = Dir.glob("_config/*.yml").join(",")

ROOT = File.expand_path('.')

require 'rubygems'
begin
  require 'colored'
rescue LoadError
  raise 'You must "gem install colored" to use terminal colors'
end

desc "copy code files for interview practice problems"
task :copy_code do
  puts "Copying code files into interview problems directory"
  cp_r("_includes/interviews/problems/", "_deploy/interviews")
end

desc "generate site"
task :generate do
  puts("Generating static site into _deploy")
  puts config_files
  system("jekyll build --config #{config_files}")
end

desc "deploy site"
task :deploy do
  puts "Getting ready to deploy."
  (Dir["#{deploy_dir}/*"]).each { |f| rm_rf(f) }
  puts "Generating site from source."
  Rake::Task[:generate].execute
  Rake::Task[:copy_code].execute
  cd "#{deploy_dir}" do
    cd ".."
    system("git init")
    system("git add . --all")
    system("git add -u")
    puts "\n## Commiting: Site updated at #{Time.now.utc}"
    message = "Site updated at #{Time.now.utc}"
    system "git commit -m \"#{message}\""
    puts "\n## Pushing generated #{deploy_dir} website"
    # system "git remote add origin https://github.com/ru7dy/ru7dy.github.io"
    system "git push origin #{deploy_branch} --force"
    puts "\n## Github Pages deploy complete"
  end
end

desc "test deploy"
task :test_deploy do
  puts "TESTING DEPLOY SCENARIO"
  (Dir["#{deploy_dir}/*"]).each { |f| rm_rf(f) }
  puts "Generating site from source."
  Rake::Task[:generate].execute
  Rake::Task[:copy_code].execute
  puts "Check deploy/ for the files that would have been uploaded to github and deployed."
end

desc "Starts the server to serve files locally"
task :jekyll do
  puts "Starting jekyll server."
  puts "Config files:"
  puts config_files
  sys("jekyll server --config #{config_files} --watch")
end


def die(s)
  puts(s.red)
  exit(1)
end

def sys(cmd)
  puts ("> "+cmd).blue
  system(cmd)
end

def format_title(title)
  title.gsub('-', '_').gsub(' ', '_').downcase + '.md'
end

def format_dir(title)
  title.gsub('-', '_').gsub(' ', '_').downcase
end

def format_title_with_directory(title)
  s = title.split('/')
  [format_dir(s[0]), format_title(title)]
end

desc "run the local server"
task :serve do
  sys("jekyll")
end

desc "generate a new post"
namespace :post do
  date = Time.now.strftime("%Y-%m-%d-")
  namespace :cs61a do
    task :note, [:title] do |t, args|
      title = format_title(args[:title])
      sys("cp #{ROOT}/_posts/templates/cs61a_note_template.md #{ROOT}/_posts/cs61a/su13/notes/#{date + title}")
    end

    task :problem, [:title] do |t, args|
      title = format_title(args[:title])
      sys("cp #{ROOT}/_posts/templates/cs61a_problem_template.md #{ROOT}/_posts/cs61a/su13/problems/#{date + title}")
    end
  end

  task :blog, [:title] do |t, args|
    title = format_title(args[:title])
    sys("cp #{ROOT}/_posts/templates/blog_template.md #{ROOT}/_posts/blog/#{date + title}")
  end

  namespace :rails do
    task :chapter, [:title] do |t, args|
      title = format_title(args[:title])
      sys("cp #{ROOT}/_posts/templates/web_dev_note_template.md #{ROOT}/_posts/web_dev/rails/#{date + title}")
    end
  end
end

task :note, [:title] do |t, args|
  title = format_title(args[:title])
  sys("touch #{ROOT}/_includes/cs61a/notes/#{title}")
end

task :problem, [:title] do |t, args|
  directory, title = format_title_with_directory(args[:title])
  sys("mkdir -p #{ROOT}/_includes/cs61a/problems/#{directory}")
  sys("cp #{ROOT}/_includes/cs61a/problems/template.md #{ROOT}/_includes/cs61a/problems/#{title}")
end

task :default => :jekyll
